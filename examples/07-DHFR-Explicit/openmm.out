>>> ###################################################################
>>> # To use this script, paste all of the lines starting with the
>>> # three greater than signs (>>>) into a python interpreter.
>>> ###################################################################
>>> 
>>> from simtk.unit import *
>>> from simtk import openmm as mm
>>> from simtk.openmm import app
>>> 
>>> pdb = app.PDBFile('dhfr.pdb')
>>> topology = pdb.topology
>>> positions = pdb.positions
>>> forcefield = app.ForceField('amber99sb.xml', 'tip3p.xml')
>>> system = forcefield.createSystem(topology,nonbondedMethod=PME,constraints=HBonds
... ,rigidWater=True,nonbondedCutoff=0.9*nanometer,useDispersionCorrection=True,ewal
... dErrorTolerance=0.0005)
>>> integrator = mm.LangevinIntegrator(300*kelvin, 1.0/picosecond, 2*femtosecond)
>>> platform = mm.Platform.getPlatformByName('CUDA')
>>> platformProperties = {'CudaPrecision': 'mixed'}
########################################################################
# Option Summary. A more detailed config file is saved to config.out.ini
########################################################################

[General]                       
platform = CUDA                  # your selection
coords = dhfr.pdb                # your selection
precision = Mixed                # default value
protein = amber99sb              # your selection
water = TIP3P                    # your selection

[System]                        
nb_method = PME                  # default value
constraints = HBonds             # default value
rigid_water = True               # default value
rand_vels = True                 # default value
disp_corr = True                 # default value
ewald_tol = 0.0005               # default value
cutoff = 0.9*nanometer           # your selection
gen_temp = 300*kelvin            # default value

[Dynamics]                      
integrator = Langevin            # default value
dt = 2*femtosecond               # default value
temp = 300*kelvin                # default value
collision_rate = 1.0/picosecond  # default value
barostat = None                  # default value
thermostat = None                # default value

[Simulation]                    
n_steps = 100000                 # your selection
restart_file = restart.json.bz2  # default value
minimize = True                  # default value
restart_freq = 5000              # default value
traj_file = output.dcd           # default value
read_restart = False             # default value
progress_freq = 1000             # default value
write_restart = True             # default value
traj_freq = 1000                 # default value

>>> simulation = app.Simulation(topology, system, integrator, platform, properties)
